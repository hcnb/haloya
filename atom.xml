<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-23T07:24:56.157Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CloudFlare Pages 反代脚本分享</title>
    <link href="http://example.com/2022/06/23/cloudFlare-pages/"/>
    <id>http://example.com/2022/06/23/cloudFlare-pages/</id>
    <published>2022-06-23T07:10:50.764Z</published>
    <updated>2022-06-23T07:24:56.157Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介："><a href="#1-简介：" class="headerlink" title="1. 简介："></a><strong>1. 简介：</strong></h4><p>今天和大家分享几个CloudFlare Pages 反代脚本，来加速富强。</p><h4 id="2-反代脚本："><a href="#2-反代脚本：" class="headerlink" title="2. 反代脚本："></a><strong>2. 反代脚本：</strong></h4><h5 id="2-1-单双日轮换反代代码"><a href="#2-1-单双日轮换反代代码" class="headerlink" title="2.1 单双日轮换反代代码"></a><strong>2.1 单双日轮换反代代码</strong></h5><figure class="highlight plaintext"><figcaption><span>default &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  async fetch(request, env) &#123;</span><br><span class="line">    const day1 = &#x27;app0.example.com&#x27;</span><br><span class="line">    const day2 = &#x27;app1.example.com&#x27;</span><br><span class="line">    let url = new URL(request.url);</span><br><span class="line">    if (url.pathname.startsWith(&#x27;/&#x27;)) &#123;</span><br><span class="line">      let day = new Date()</span><br><span class="line">      if (day.getDay() % 2) &#123;</span><br><span class="line">        url.hostname = day1</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        url.hostname = day2</span><br><span class="line">      &#125;</span><br><span class="line">      let new_request = new Request(url, request);</span><br><span class="line">      return fetch(new_request);</span><br><span class="line">    &#125;</span><br><span class="line">    return env.ASSETS.fetch(request);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="2-2-五天轮换反代代码"><a href="#2-2-五天轮换反代代码" class="headerlink" title="2.2 五天轮换反代代码"></a><strong>2.2 五天轮换反代代码</strong></h5><figure class="highlight plaintext"><figcaption><span>default &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  async fetch(request, env) &#123;</span><br><span class="line">    const day1 = &#x27;app0.example.com&#x27;</span><br><span class="line">    const day2 = &#x27;app1.example.com&#x27;</span><br><span class="line">    const day3 = &#x27;app2.example.com&#x27;</span><br><span class="line">    const day4 = &#x27;app3.example.com&#x27;</span><br><span class="line">    const day5 = &#x27;app4.example.com&#x27;</span><br><span class="line">    let url = new URL(request.url);</span><br><span class="line">    if (url.pathname.startsWith(&#x27;/&#x27;)) &#123;</span><br><span class="line">      let day = new Date().getDay() % 5;</span><br><span class="line">      if (day === 0) &#123;</span><br><span class="line">        url.hostname = day1</span><br><span class="line">      &#125; else if (day === 1) &#123;</span><br><span class="line">        url.hostname = day2</span><br><span class="line">      &#125; else if (day === 2) &#123;</span><br><span class="line">        url.hostname = day3</span><br><span class="line">      &#125; else if (day === 3) &#123;</span><br><span class="line">        url.hostname = day4</span><br><span class="line">      &#125; else if (day === 4) &#123;</span><br><span class="line">        url.hostname = day5</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        url.hostname = day1</span><br><span class="line">      &#125;</span><br><span class="line">      let new_request = new Request(url, request);</span><br><span class="line">      return fetch(new_request);</span><br><span class="line">    &#125;</span><br><span class="line">    return env.ASSETS.fetch(request);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="2-3-一周轮换反代代码"><a href="#2-3-一周轮换反代代码" class="headerlink" title="2.3 一周轮换反代代码"></a><strong>2.3 一周轮换反代代码</strong></h5><figure class="highlight plaintext"><figcaption><span>default &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  async fetch(request, env) &#123;</span><br><span class="line">    const day1 = &#x27;app0.example.com&#x27;</span><br><span class="line">    const day2 = &#x27;app1.example.com&#x27;</span><br><span class="line">    const day3 = &#x27;app2.example.com&#x27;</span><br><span class="line">    const day4 = &#x27;app3.example.com&#x27;</span><br><span class="line">    const day5 = &#x27;app4.example.com&#x27;</span><br><span class="line">    const day6 = &#x27;app5.example.com&#x27;</span><br><span class="line">    const day7 = &#x27;app6.example.com&#x27;</span><br><span class="line">    let url = new URL(request.url);</span><br><span class="line">    if (url.pathname.startsWith(&#x27;/&#x27;)) &#123;</span><br><span class="line">      let day = new Date().getDay();</span><br><span class="line">      if (day === 0) &#123;</span><br><span class="line">        url.hostname = day1</span><br><span class="line">      &#125; else if (day === 1) &#123;</span><br><span class="line">        url.hostname = day2</span><br><span class="line">      &#125; else if (day === 2) &#123;</span><br><span class="line">        url.hostname = day3</span><br><span class="line">      &#125; else if (day === 3) &#123;</span><br><span class="line">        url.hostname = day4</span><br><span class="line">      &#125; else if (day === 4) &#123;</span><br><span class="line">        url.hostname = day5</span><br><span class="line">      &#125; else if (day === 5) &#123;</span><br><span class="line">        url.hostname = day6</span><br><span class="line">      &#125; else if (day === 6) &#123;</span><br><span class="line">        url.hostname = day7</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        url.hostname = day1</span><br><span class="line">      &#125;</span><br><span class="line">      let new_request = new Request(url, request);</span><br><span class="line">      return fetch(new_request);</span><br><span class="line">    &#125;</span><br><span class="line">    return env.ASSETS.fetch(request);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="2-4-任意天数反代代码"><a href="#2-4-任意天数反代代码" class="headerlink" title="2.4 任意天数反代代码"></a><strong>2.4 任意天数反代代码</strong></h5><figure class="highlight plaintext"><figcaption><span>default &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">async fetch(request, env) &#123;</span><br><span class="line">const cars = [</span><br><span class="line">&quot;app1.example.com&quot;,</span><br><span class="line">&quot;app2.example.com&quot;,</span><br><span class="line">&quot;app3.example.com&quot;,</span><br><span class="line">&quot;app4.example.com&quot;,</span><br><span class="line">&quot;app5.example.com&quot;</span><br><span class="line">];</span><br><span class="line">let host = cars[Math.floor(Math.random() * cars.length)]; //随机选择VPS</span><br><span class="line">//let host = cars[new Date().getDate() % cars.length]; //每天自动更换VPS</span><br><span class="line">let url = new URL(request.url);</span><br><span class="line">if (url.pathname.startsWith(&#x27;/&#x27;)) &#123;</span><br><span class="line">url.hostname = host;</span><br><span class="line">let new_request = new Request(url,request);</span><br><span class="line">return fetch(new_request);</span><br><span class="line">&#125;</span><br><span class="line">return env.ASSETS.fetch(request);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-简介：&quot;&gt;&lt;a href=&quot;#1-简介：&quot; class=&quot;headerlink&quot; title=&quot;1. 简介：&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 简介：&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;今天和大家分享几个CloudFlare Pages 反代脚本，来加速富强。&lt;/</summary>
      
    
    
    
    <category term="免费" scheme="http://example.com/categories/%E5%85%8D%E8%B4%B9/"/>
    
    
    <category term="cf" scheme="http://example.com/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>Heroku五合一协议共存项目</title>
    <link href="http://example.com/2022/06/23/heroku-xary/"/>
    <id>http://example.com/2022/06/23/heroku-xary/</id>
    <published>2022-06-22T19:25:52.600Z</published>
    <updated>2022-06-23T07:09:15.551Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介："><a href="#1-简介：" class="headerlink" title="1. 简介："></a><strong>1. 简介：</strong></h4><ul><li><p>仅适用于Github下部署</p></li><li><p>Xray内核，支持vless-ws，vmess-ws，trojan-ws，shadowsocks-ws，socks5-ws搭建过程与客户端配置说明</p></li><li><p>下载后上传到Github上进行部署。注意项目名称说明不要出现有V2ray、Xray等相关字样。</p></li></ul><h4 id="2-操作步骤："><a href="#2-操作步骤：" class="headerlink" title="2. 操作步骤："></a><strong>2. 操作步骤：</strong></h4><h5 id="2-1-步骤"><a href="#2-1-步骤" class="headerlink" title="2.1 步骤"></a><strong>2.1 步骤</strong></h5><ul><li><p>在浏览器复制链接   <a class="link"   href="https://dashboard.heroku.com/new?template=" >https://dashboard.heroku.com/new?template=<i class="fas fa-external-link-alt"></i></a> 加上上传至Github的项目地址链接，回车进入Heroku参数设置界面</p></li><li><p>之前没有登录记录的话，会先提示注册并或登录Heroku界面，大家自己注册或者登录下</p></li><li><p>Heroku app名称与国家随意，最后设置图如下</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.30q5nzo27ak0.webp"></p><ul><li><p>输入UUID，建议使用V2rayN等工具生成，点击Deploy app，几秒种后就完成安装。</p></li><li><p>由于使用了Caddy，未设伪装网页，所以点击heroku本地域名时（app.heroku.com）为空白界面，所有反代（workers与pages）测试为绿色200 ok，反代地址也为空白界面，请大家知晓。</p></li></ul><h5 id="2-2-关于heroku封杀特征说明："><a href="#2-2-关于heroku封杀特征说明：" class="headerlink" title="2.2 关于heroku封杀特征说明："></a><strong>2.2 关于heroku封杀特征说明：</strong></h5><ul><li><p>项目部署时被强制中断封杀</p></li><li><p>项目部署后，测个速度也会被封杀</p></li><li><p>项目部署后，不跑流量，放着不动也会被封杀</p></li></ul><p><strong>已证实，heroku封杀看特性，不看流量大小。之前的项目是明文，现在加密了，测试了几周没问题，所以大家可以试试看。</strong></p><h4 id="3-客户端配置如下"><a href="#3-客户端配置如下" class="headerlink" title="3.客户端配置如下"></a><strong>3.客户端配置如下</strong></h4><h5 id="3-1-IOS端小火箭就可以通吃，安卓端推荐V2rayNG或搭配Kitsunebi"><a href="#3-1-IOS端小火箭就可以通吃，安卓端推荐V2rayNG或搭配Kitsunebi" class="headerlink" title="3.1 IOS端小火箭就可以通吃，安卓端推荐V2rayNG或搭配Kitsunebi"></a><strong>3.1 IOS端小火箭就可以通吃，安卓端推荐V2rayNG或搭配Kitsunebi</strong></h5><ul><li><p>协议：(vless&#x2F;vmess&#x2F;trojan)-ws</p></li><li><p>地址：app.heroku.com（自选IP&#x2F;域名）</p></li><li><p>端口：443</p></li><li><p>用户ID&#x2F;密码：自定义UUID</p></li><li><p>传输协议：ws</p></li><li><p>伪装host：app.heroku.com（workers或pages反代&#x2F;自定义域）</p></li><li><p>路径path：&#x2F;自定义UUID-协议开头两小写字母</p></li><li><p>传输安全：tls</p></li><li><p>SNI：app.heroku.com（workers或pages反代&#x2F;自定义域）</p></li></ul><p><strong>其他设置保持默认即可！</strong></p><h5 id="3-2-shadowsocks-ws与socks5-ws推荐用Kitsunebi，配置简单，不需要plugin插件"><a href="#3-2-shadowsocks-ws与socks5-ws推荐用Kitsunebi，配置简单，不需要plugin插件" class="headerlink" title="3.2 shadowsocks-ws与socks5-ws推荐用Kitsunebi，配置简单，不需要plugin插件"></a><strong>3.2 shadowsocks-ws与socks5-ws推荐用Kitsunebi，配置简单，不需要plugin插件</strong></h5><ul><li><p>地址：app.heroku.com（自选IP&#x2F;域名）</p></li><li><p>端口：443</p></li><li><p>shadowsocks密码：自定义UUID</p></li><li><p>shadowsocks加密方式：chacha20-ietf-poly1305(默认)</p></li><li><p>socks5用户名：空</p></li></ul><h5 id="3-3-socks5密码："><a href="#3-3-socks5密码：" class="headerlink" title="3.3 socks5密码："></a><strong>3.3 socks5密码：</strong></h5><ul><li><p>传输协议：ws</p></li><li><p>伪装host：app.heroku.com（workers或pages反代&#x2F;自定义域）</p></li><li><p>路径path：&#x2F;自定义UUID-协议开头两小写字母</p></li><li><p>传输安全：tls</p></li><li><p>SNI(证书域名)：app.heroku.com（workers或pages反代&#x2F;自定义域）</p></li></ul><p><strong>其他设置保持默认即可！</strong></p><h4 id="4-关于为什么套CF以及满足自选IP-x2F-域名的条件解答（443端口，且TLS开启）"><a href="#4-关于为什么套CF以及满足自选IP-x2F-域名的条件解答（443端口，且TLS开启）" class="headerlink" title="4. 关于为什么套CF以及满足自选IP&#x2F;域名的条件解答（443端口，且TLS开启）"></a><strong>4. 关于为什么套CF以及满足自选IP&#x2F;域名的条件解答（443端口，且TLS开启）</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.29nd3fiyizk0.webp"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-简介：&quot;&gt;&lt;a href=&quot;#1-简介：&quot; class=&quot;headerlink&quot; title=&quot;1. 简介：&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 简介：&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;仅适用于Github下部署&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p</summary>
      
    
    
    
    <category term="免费" scheme="http://example.com/categories/%E5%85%8D%E8%B4%B9/"/>
    
    
    <category term="heroku" scheme="http://example.com/tags/heroku/"/>
    
    <category term="白嫖" scheme="http://example.com/tags/%E7%99%BD%E5%AB%96/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Learn的Azure 临时RDP远程桌面</title>
    <link href="http://example.com/2022/06/22/microsoft-widows/"/>
    <id>http://example.com/2022/06/22/microsoft-widows/</id>
    <published>2022-06-22T15:34:25.337Z</published>
    <updated>2022-06-23T06:35:47.661Z</updated>
    
    <content type="html"><![CDATA[<p>在之前的文章中，我描述过Microsoft Learn的远程桌面。但是那篇文章的方法只能用2个小时。本文的教程是使用Microsoft Learn的Azure的沙箱，来创建临时RDP远程桌面</p><h5 id="1-准备材料"><a href="#1-准备材料" class="headerlink" title="1.准备材料"></a>1.准备材料</h5><ul><li><p>Microsoft账号</p></li><li><p>远程桌面软件</p></li></ul><h5 id="2-部署步骤"><a href="#2-部署步骤" class="headerlink" title="2.部署步骤"></a>2.部署步骤</h5><ul><li><p>打开这个沙箱</p></li><li><p>点击“激活沙盒”按钮，如未登录Microsoft 账户的会自动跳转登录页面登录</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.39lh53zu8ey0.webp"></p><ul><li>由于Azure沙盒微软是严格限制访问其外网的服务，因此这篇文章会用到我朋友写的加密破解脚本来创建VPS。在右边的Cloud Shell运行以下命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -skLO bit.do/azurewinvmplus ; chmod +x azurewinvmplus ; ./azurewinvmplus</span><br></pre></td></tr></table></figure><h5 id="3-选择VPS地区"><a href="#3-选择VPS地区" class="headerlink" title="3.选择VPS地区"></a>3.选择VPS地区</h5><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.39lh53zu8ey0.webp"></p><h5 id="4-选择系统"><a href="#4-选择系统" class="headerlink" title="4.选择系统"></a>4.选择系统</h5><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.qg9f5ek55n4.webp"></p><h5 id="5-选择配置，然后等待创建"><a href="#5-选择配置，然后等待创建" class="headerlink" title="5.选择配置，然后等待创建"></a>5.选择配置，然后等待创建</h5><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.2h36ov0t6ky0.webp"></p><h5 id="6-等待差不多5-10分钟，然后就可以看到RDP的登录信息了"><a href="#6-等待差不多5-10分钟，然后就可以看到RDP的登录信息了" class="headerlink" title="6.等待差不多5-10分钟，然后就可以看到RDP的登录信息了"></a>6.等待差不多5-10分钟，然后就可以看到RDP的登录信息了</h5><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.30m7vm7bttc0.webp"></p><h5 id="7-微软远程桌面软件中，计算机名称填写刚刚提示的IP"><a href="#7-微软远程桌面软件中，计算机名称填写刚刚提示的IP" class="headerlink" title="7.微软远程桌面软件中，计算机名称填写刚刚提示的IP"></a>7.微软远程桌面软件中，计算机名称填写刚刚提示的IP</h5><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.50ezwnd4iac0.webp"></p><h5 id="8-输入用户名密码"><a href="#8-输入用户名密码" class="headerlink" title="8.输入用户名密码"></a>8.输入用户名密码</h5><p><img src="https://cdn.jsdelivr.net/gh/yayaniub/PicX@master/20220623/image.33ie6b3sdoa0.webp"></p><h5 id="9-连接到远程桌面，白嫖成功！"><a href="#9-连接到远程桌面，白嫖成功！" class="headerlink" title="9.连接到远程桌面，白嫖成功！"></a>9.连接到远程桌面，白嫖成功！</h5><p>本文转载自小御坂的破站<br>文章作者: Misaka No<br>文章链接: <a class="link"   href="https://owo.misaka.rest/az-mslearn-windesktop/" >https://owo.misaka.rest/az-mslearn-windesktop/<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在之前的文章中，我描述过Microsoft Learn的远程桌面。但是那篇文章的方法只能用2个小时。本文的教程是使用Microsoft Learn的Azure的沙箱，来创建临时RDP远程桌面&lt;/p&gt;
&lt;h5 id=&quot;1-准备材料&quot;&gt;&lt;a href=&quot;#1-准备材料&quot; cla</summary>
      
    
    
    
    <category term="免费" scheme="http://example.com/categories/%E5%85%8D%E8%B4%B9/"/>
    
    
    <category term="免费" scheme="http://example.com/tags/%E5%85%8D%E8%B4%B9/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/06/22/hello-world/"/>
    <id>http://example.com/2022/06/22/hello-world/</id>
    <published>2022-06-22T12:56:13.560Z</published>
    <updated>2022-06-22T12:56:13.560Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;! This is your very first post. Che</summary>
      
    
    
    
    
  </entry>
  
</feed>
